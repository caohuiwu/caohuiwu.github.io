{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/touxiang.jpg","path":"images/touxiang.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1560698886760},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1560698886760},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1560698886762},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1560698886762},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1560698886762},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1560698886763},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1560698886763},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1560698886763},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1560698886763},{"_id":"themes/next/README.md","hash":"287c7e6b7a6ddf75d815dda0df8bd228e3f285c5","modified":1560698886763},{"_id":"themes/next/README.cn.md","hash":"263b74f1ac7c0f6f9424b8cced4b0b320ae61efc","modified":1560698886763},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1560698886764},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1560698886764},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1560698886793},{"_id":"themes/next/_config.yml","hash":"0d494a78170fc286172cd6a1b7c286bd8cb8a6fc","modified":1560785536121},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1560698886754},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1560698886755},{"_id":"themes/next/.git/COMMIT_EDITMSG","hash":"c282500e1d726ab51cdaae9093a321af0edb776e","modified":1560870055561},{"_id":"themes/next/.git/packed-refs","hash":"3bb2e8e3fad44742d3e3bfadfb0b4d791fe9fe9e","modified":1560698886752},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1560698886761},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"50d48c47162817a3810a9d9ad51104e83947419a","modified":1560698886761},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1560698886762},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1560698886762},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1560698629104},{"_id":"themes/next/.git/index","hash":"7ea68df08d4803f3ec14163c6853d9b7c60d613e","modified":1560870055556},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1560698886764},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1560698886765},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1560698886764},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1560698886765},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1560698886765},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1560698886765},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1560698886765},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1560698886765},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1560698886765},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1560698886765},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1560698886766},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1560698886765},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1560698886766},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1560698886766},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1560698886766},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1560698886766},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1560698886767},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1560698886792},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1560698886792},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1560698886792},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1560698886793},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1560698886793},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1560698886794},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1560698886794},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1560698886793},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1560698886793},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1560698886857},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1560698886858},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1560698886858},{"_id":"source/_posts/Linux-io-model.md","hash":"5926d51ded8c5e5d2e0d6023a9749ca4e584e467","modified":1566036115734},{"_id":"source/_posts/MQ.md","hash":"dba3832ec7eb3bc96d6d4a747e2a9aac2c03f20f","modified":1563980525903},{"_id":"source/_posts/bio.md","hash":"6776a7c74b751d5be4a3bfa967260c483807acf2","modified":1564066716903},{"_id":"source/_posts/nio.md","hash":"7ab96734ef6954235d24ca918880bab08b92978d","modified":1566137804201},{"_id":"source/_posts/cas-sso.md","hash":"df554c6b59f57e30b5442d0073e7d8f1d18e229d","modified":1563703355246},{"_id":"source/categories/index.md","hash":"fa7a8261e492ea2dd318d68a1e644b71cc03173b","modified":1560695492000},{"_id":"source/_posts/本博客搭建.md","hash":"a2d44fc15b4596aec535268d886f21ea61208b90","modified":1560866575261},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1560698886760},{"_id":"source/tags/index.md","hash":"c28f7765f0db60695ece80a5478253847b8749a0","modified":1560695492000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1560698886816},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1560698629104},{"_id":"themes/next/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1560698629104},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1560698629104},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1560698629105},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1560698629104},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1560698629105},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1560698629104},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1560698629105},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1560698629105},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1560698629105},{"_id":"themes/next/.git/logs/HEAD","hash":"0cf2ac3b0933f128224340060a29b470cce8064e","modified":1560870055568},{"_id":"themes/next/.git/info/exclude","hash":"bb5a85730dcf100facee799c05cc4f6affec0745","modified":1560698629103},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1560698886767},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1560698886768},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1560698886768},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1560698886768},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1560698886767},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1560698886768},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1560698886767},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1560698886769},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1560698886769},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1560698886769},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1560698886775},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1560698886776},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1560698886776},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1560698886776},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1560698886777},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1560698886777},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1560698886778},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1560698886786},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1560698886786},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1560698886787},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1560698886788},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1560698886788},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1560698886788},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1560698886788},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1560698886795},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1560698886795},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1560698886795},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1560698886795},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1560698886795},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1560698886796},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1560698886796},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1560698886796},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1560698886796},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1560698886816},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1560698886816},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1560698886817},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1560698886817},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1560698886817},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1560698886817},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1560698886817},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1560698886818},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1560698886818},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1560698886818},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1560698886818},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1560698886818},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1560698886818},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1560698886819},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1560698886819},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1560698886819},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1560698886819},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1560698886819},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1560698886819},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1560698886768},{"_id":"source/_posts/bio/bio.png","hash":"1a1e8de6329fa900b6e3b8e82c5dadf9be1a8b11","modified":1564066638000},{"_id":"source/_posts/cas-sso/cas-login.svg","hash":"74ecd6c4506307d90860845cf573b0fb14a3e009","modified":1563702951000},{"_id":"source/_posts/cas-sso/cas-logout.svg","hash":"ac6da0e2f49eb7f58c497ae5c12eb027a58d8731","modified":1563703311000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1560698886778},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1560698886778},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1560698886811},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1560698886811},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1560698886811},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1560698886815},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1560698886816},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1560698629105},{"_id":"themes/next/.git/objects/0c/76ba52347e972347e63c85dcf4e55f991b2231","hash":"adec942eec93c2f39440cc6b68762992388a2dd3","modified":1560870055000},{"_id":"themes/next/.git/objects/37/954f739330b78dd9328007d25156563135e1fb","hash":"5c67115bc93d3ea44503bb8e3fc6bf110d16ab54","modified":1560870055000},{"_id":"themes/next/.git/objects/25/5dfbd99e2da7c5314be1a6655a37c3cc40ea02","hash":"d50e7dfb7bf0b0364e98608cf1771cce010f31b8","modified":1560870055000},{"_id":"themes/next/.git/objects/df/9f3d449e510cceb7570810740975f99dcbfc9f","hash":"785869c46cce29e34aa94d5799d0e3b4e891cd36","modified":1560870055000},{"_id":"themes/next/.git/objects/f9/71b3655340aef0c44f143f6446565a7025c3de","hash":"012b7eb4940f1ed5433a269fb8937bb6dd97c826","modified":1560870055561},{"_id":"themes/next/.git/refs/heads/master","hash":"f9a3288706dcec3a3b605afad35d2096bbe12fc0","modified":1560870055562},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1560698886775},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1560698886775},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1560698886776},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1560698886776},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1560698886776},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1560698886777},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1560698886777},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1560698886777},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1560698886777},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1560698886778},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1560698886778},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1560698886778},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1560698886779},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1560698886779},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1560698886779},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1560698886779},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1560698886779},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1560698886779},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1560698886780},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1560698886780},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1560698886780},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1560698886780},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1560698886781},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1560698886781},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1560698886781},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1560698886783},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1560698886782},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1560698886783},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1560698886783},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1560698886784},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1560698886784},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1560698886784},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1560698886785},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1560698886785},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1560698886790},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1560698886791},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1560698886791},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1560698886792},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1560698886810},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1560698886810},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1560698886811},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1560698886811},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1560698886815},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1560698886815},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1560698886816},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1560698886816},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1560698886820},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1560698886820},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1560698886820},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1560698886820},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1560698886820},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1560698886821},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1560698886821},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1560698886821},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1560698886822},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1560698886822},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1560698886822},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1560698886826},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1560698886828},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1560698886829},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1560698886829},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1560698886829},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1560698886832},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1560698886832},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1560698886832},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1560698886833},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1560698886833},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1560698886834},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1560698886834},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1560698886834},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1560698886834},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1560698886844},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1560698886845},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1560698886845},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1560698886846},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1560698886846},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1560698886846},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1560698886846},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1560698886847},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1560698886847},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1560698886847},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1560698886847},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1560698886848},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1560698886848},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1560698886848},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1560698886848},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1560698886848},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1560698886848},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1560698886849},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1560698886849},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1560698886849},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1560698886849},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1560698886849},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1560698886849},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1560698886847},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1560698886850},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1560698886850},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1560698886850},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1560698886854},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1560698886854},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1560698886857},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1560698886856},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1560698886857},{"_id":"source/_posts/Linux-io-model/sync-block.png","hash":"28049a44fae989f2e1064c513ac693787e085429","modified":1563701974000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1560698886845},{"_id":"themes/next/source/images/touxiang.jpg","hash":"5831ff48e6fa41ae20250879f29ed1f1526e99ab","modified":1540361071000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"0cf2ac3b0933f128224340060a29b470cce8064e","modified":1560870055568},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1560698886753},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1560698886790},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1560698886789},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1560698886797},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1560698886797},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1560698886797},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1560698886797},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1560698886797},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1560698886801},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1560698886805},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1560698886809},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1560698886809},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1560698886809},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1560698886810},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1560698886810},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1560698886810},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1560698886810},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1560698886811},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1560698886812},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1560698886812},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1560698886812},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1560698886812},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1560698886812},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1560698886812},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1560698886813},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1560698886813},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1560698886813},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1560698886814},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1560698886814},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1560698886814},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1560698886814},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1560698886814},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1560698886815},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1560698886815},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1560698886815},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1560698886815},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1560698886824},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1560698886825},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1560698886821},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1560698886829},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1560698886829},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1560698886830},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1560698886830},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1560698886830},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1560698886830},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1560698886831},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1560698886832},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1560698886825},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1560698886832},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1560698886833},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1560698886833},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1560698886835},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1560698886834},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1560698886835},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1560698886854},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1560698886854},{"_id":"themes/next/.git/objects/02/b5e2ff572ca0681811a1b60a218272b5efc81a","hash":"e65e194b85f6acdd51ccf4391bfa3e3dd22392c3","modified":1560870055000},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1560698886824},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1560698886844},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1560698886844},{"_id":"source/_posts/Linux-io-model/async-block.png","hash":"3f50f85745fc5405dfec8a4d31e9337e8649de98","modified":1563702368000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"6884f243872ef8dd797606dfa0941a5599583cce","modified":1560698886753},{"_id":"source/_posts/Linux-io-model/sync-nonblock.png","hash":"e706080387623abcbce59b0853564c411812fc6d","modified":1563702244000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1560698886798},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1560698886798},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1560698886798},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1560698886798},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1560698886798},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1560698886798},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1560698886799},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1560698886799},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1560698886799},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1560698886800},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1560698886800},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1560698886800},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1560698886800},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1560698886800},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1560698886804},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1560698886804},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1560698886804},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1560698886804},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1560698886804},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1560698886805},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1560698886805},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1560698886805},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1560698886805},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1560698886805},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1560698886801},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1560698886801},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1560698886801},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1560698886801},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1560698886802},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1560698886802},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1560698886802},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1560698886802},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1560698886802},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1560698886803},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1560698886802},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1560698886803},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1560698886803},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1560698886803},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1560698886803},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1560698886806},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1560698886806},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1560698886806},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1560698886806},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1560698886806},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1560698886807},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1560698886807},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1560698886807},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1560698886807},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1560698886807},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1560698886807},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1560698886808},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1560698886808},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1560698886808},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1560698886808},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1560698886808},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1560698886808},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1560698886809},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1560698886809},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1560698886813},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1560698886813},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1560698886814},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1560698886823},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1560698886823},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1560698886823},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1560698886823},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1560698886856},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1560698886830},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1560698886830},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1560698886831},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1560698886831},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1560698886831},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1560698886831},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1560698886837},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1560698886823},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1560698886843},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1560698886838},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1560698886828},{"_id":"themes/next/.git/objects/pack/pack-cab418463cd893872a0ff15ce8d9047332b9e5c1.idx","hash":"a6b07e47b81e230c17ee052afe99cb97b688bb35","modified":1560698886743},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1560698886841},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1560698886853},{"_id":"themes/next/.git/objects/pack/pack-cab418463cd893872a0ff15ce8d9047332b9e5c1.pack","hash":"8ae43a23dddc9895f4c16760c5d4b12614ec6226","modified":1560698886738},{"_id":"public/categories/index.html","hash":"33df7bc364c3e86a6482e979c2f849ff42b05303","modified":1563980483847},{"_id":"public/tags/index.html","hash":"e5486d11f861c3200f3354f1a24d9dd393a63bd2","modified":1563980483847},{"_id":"public/2019/07/21/Linux-io-model/index.html","hash":"10b2be621693c859651059273be5809a605ead24","modified":1563980483850},{"_id":"public/2019/03/05/cas-sso/index.html","hash":"6362e881cf01aa47999f85d1c9a9bf635a440349","modified":1563980483850},{"_id":"public/2019/06/14/nio/index.html","hash":"faad009b3a4409dc820e30dcafe4690ef0fc943b","modified":1563980483916},{"_id":"public/categories/MQ/index.html","hash":"1e0314332d5ee4d7b768d99b36c74c8b936713e8","modified":1563980483916},{"_id":"public/categories/Linux/index.html","hash":"9f6825d0c467a5dd86e396f3998876bd93f8a2ef","modified":1563980483916},{"_id":"public/archives/index.html","hash":"32d934046aaf32e4482944fafc54a20670427f2b","modified":1563980483916},{"_id":"public/archives/2019/index.html","hash":"2dc2cce3e4a0f34b1645ba0d90ec07121be3f1fc","modified":1563980483916},{"_id":"public/archives/2019/03/index.html","hash":"4304c7a7f6570d71cc8677a291e3207a88da7019","modified":1563980483916},{"_id":"public/archives/2019/06/index.html","hash":"c4796a66445a089fa2ecf3badeb3535b8b5a8894","modified":1563980483916},{"_id":"public/archives/2019/07/index.html","hash":"736591d679f68446cdbdcaf09ca480c76facdafe","modified":1563980483916},{"_id":"public/tags/Linux-IO/index.html","hash":"fad2b76adb8a979dfdbfa68da92ef697632c809e","modified":1563980483916},{"_id":"public/tags/bio/index.html","hash":"c23b0398135d0c1fb86394b7305b100d3dc89565","modified":1563980483916},{"_id":"public/categories/hexo/index.html","hash":"16fec15da80d79617d194da0db9c203b980ff9ea","modified":1563980483916},{"_id":"public/tags/CAS-Shiro-单点登录-权限控制/index.html","hash":"3c95b57a45960937fc9bffb9e2d264a362d92036","modified":1563980483916},{"_id":"public/categories/单点登录/index.html","hash":"5e39509d5058b74c6bdb7e54111376ba2bfbb9a4","modified":1563980483917},{"_id":"public/categories/io/index.html","hash":"da1c0688cd4e612af6aee56fb9d5db9e46802c53","modified":1563980483917},{"_id":"public/2019/05/18/bio/index.html","hash":"a1d1ca2013d34c1c90a383dd1ebfdb105d74e54b","modified":1563980483917},{"_id":"public/2019/03/02/本博客搭建/index.html","hash":"300ebd7603800726d31a98c53fef66333f0c7753","modified":1563980483917},{"_id":"public/index.html","hash":"ad8a945eaf9858068a4282f37e578c5c9e4245ae","modified":1563980483917},{"_id":"public/2019/07/10/MQ/index.html","hash":"8a82340def8678df5d8c23aefb700da7090dcb08","modified":1563980483921},{"_id":"public/archives/2019/05/index.html","hash":"bbb9bb1134a8b3735e08c67508a88e71a2085f25","modified":1563980483921},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1563980483922},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1563980483922},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1563980483922},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1563980483922},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1563980483922},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1563980483922},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1563980483922},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1563980483922},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1563980483922},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1563980483922},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1563980483922},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1563980483922},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1563980483922},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1563980483922},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1563980483922},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1563980483922},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1563980483922},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1563980483922},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1563980483923},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1563980483923},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1563980483923},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1563980483923},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1563980483923},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1563980483923},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1563980483923},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1563980483923},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1563980483923},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1563980483923},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1563980483923},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1563980483923},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1563980483923},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1563980483923},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1563980483923},{"_id":"public/2019/05/18/bio/bio.png","hash":"dab5b2326534c16c8328caf6a31c74312eef43b8","modified":1563980483924},{"_id":"public/2019/03/05/cas-sso/cas-login.svg","hash":"74ecd6c4506307d90860845cf573b0fb14a3e009","modified":1563980484457},{"_id":"public/2019/03/05/cas-sso/cas-logout.svg","hash":"ac6da0e2f49eb7f58c497ae5c12eb027a58d8731","modified":1563980484460},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1563980484462},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1563980484462},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1563980484470},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1563980484470},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1563980484470},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1563980484471},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1563980484471},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1563980484471},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1563980484471},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1563980484471},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1563980484471},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1563980484471},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1563980484471},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1563980484471},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1563980484471},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1563980484471},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1563980484471},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1563980484471},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1563980484471},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1563980484471},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1563980484471},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1563980484471},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1563980484471},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1563980484471},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1563980484471},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1563980484471},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1563980484471},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1563980484471},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1563980484471},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1563980484471},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1563980484472},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1563980484472},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1563980484472},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1563980484472},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1563980484472},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1563980484472},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1563980484472},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1563980484472},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1563980484472},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1563980484472},{"_id":"public/lib/fastclick/README.html","hash":"c5a4c05ca80132b7e343d5fd1d1d1a976b4ad151","modified":1563980484472},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"81057e5b518b8ab60474e1ad027e868b558f15b7","modified":1563980484472},{"_id":"public/lib/jquery_lazyload/README.html","hash":"18a600ca1aafd3bf08af52b6a6fe5f056aeed9f4","modified":1563980484472},{"_id":"public/css/main.css","hash":"0f6743c64c7bb68e6cb99cae29469cc1b5a153d4","modified":1563980484472},{"_id":"public/images/touxiang.jpg","hash":"5831ff48e6fa41ae20250879f29ed1f1526e99ab","modified":1563980484472},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1563980484472},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1563980484472},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1563980484472},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1563980484476},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1563980484476},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1563980484476},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1563980484476},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1563980484476},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1563980484476},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1563980484476},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1563980484476},{"_id":"public/2019/07/21/Linux-io-model/sync-block.png","hash":"28049a44fae989f2e1064c513ac693787e085429","modified":1563980484476},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1563980484480},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1563980484480},{"_id":"public/2019/07/21/Linux-io-model/async-block.png","hash":"3f50f85745fc5405dfec8a4d31e9337e8649de98","modified":1563980484480},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1563980484482},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1563980484482},{"_id":"public/2019/07/21/Linux-io-model/sync-nonblock.png","hash":"e706080387623abcbce59b0853564c411812fc6d","modified":1563980484483},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1563980484487},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1563980484487},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1563980484487},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1563980484488},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1563980484488},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1563980484488},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1563980484488},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1563980484499},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1563980484499},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1563980484500},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1563980484502},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1563980484506},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1563980484506},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1563980484507},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1563980484513},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1563980484524},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1563980484528},{"_id":"source/_posts/nio/nio-common.png","hash":"19e860cad01af1e5ce3b3e48241601d9d377fd22","modified":1564066598000}],"Category":[{"name":"Linux","_id":"cjyhdljnt0003j9s6x9js29p7"},{"name":"MQ","_id":"cjyhdljny0008j9s6t8kh0b3q"},{"name":"io","_id":"cjyhdljo1000dj9s6fczg0ey1"},{"name":"单点登录","_id":"cjyhdljo2000hj9s66hjvdg1d"},{"name":"hexo","_id":"cjyhdljo2000kj9s6pji7l5dm"}],"Data":[],"Page":[{"title":"分类","date":"2019-03-12T14:07:58.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2019-03-12 22:07:58\ntype: \"categories\"\ncomments: false\n---\n","updated":"2019-06-16T14:31:32.000Z","path":"categories/index.html","layout":"page","_id":"cjyhdljno0001j9s60e1jo37d","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2019-03-12T14:14:34.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-03-12 22:14:34\ntype: \"tags\"\ncomments: false\n---\n","updated":"2019-06-16T14:31:32.000Z","path":"tags/index.html","layout":"page","_id":"cjyhdljp0000nj9s619jvwa3p","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Linux-io模型","date":"2019-04-11T07:43:10.000Z","_content":"### 前言\n先了解一下同步、异步、阻塞、非阻塞的相关概念。\n\n- 同步：一般指的是程序的顺序执行\n```\n    public class TestClass{\n        public static void main(String[] args) {\n            A();\n        }\n        public static void A() {\n            System.out.println(\"A执行\");\n            B();\n            System.out.println(\"A执行完成\");\n        }\n        \n        public static void B() {\n            System.out.println(\"B执行\");\n            while(true) {\n                ....\n            }\n            System.out.println(\"B执行完成\");\n        }\n    }\n```    \n>从该例子中，只有当B()执行完成后，A()方法才会输出\"A执行完成\"，这就是同步。\n    整个处理过程顺序执行，当各个过程都执行完毕，并返回结果。是一种线性执行的方式，执行的流程不能跨越\n    \n<!--more-->    \n    \n- 异步：ajax就是最好的例子\n```\n    function ajaxTest() {\n        console.log(\"方法开始执行\");\n        $.ajax({\n            url: \"/A/remoteCall\",\n            type: \"post\",\n            success: function (data) {\n                while(true) {\n                    console.log(\"方法开始执行\");\n                }\n            }\n        });\n        console.log(\"方法执行结束\");\n    }\n```\n>方法执行，不需要等待ajax的返回结果。\n    \n- 阻塞：一般指的是线程的状态\n```\n    public Result export) {\n            try {\n                InputStream inputStream = new ByteArrayInputStream(ExcelUtil.getInstance().export(excelDataList, map, groupIdNameMap).toByteArray());\n                FileCopyUtils.copy(inputStream, outputStream);\n            } catch (Exception e) {\n                log.error(\"导出Excel出错了\", e);\n                result.setMessage(\"操作失败!\");\n                result.setStatus(REST_STATUS.FAILD_EXCEPTION);\n            }\n            return result;\n        }\n```\n>例如导出中，操作系统读取文件返回花较长时间，程序不会往下执行，进入阻塞状态。    \n    \nMore info: [参考文章](https://www.jianshu.com/p/aed6067eeac9)    \n    \n    \n### Linux IO模型\n\n1. 阻塞IO（bloking IO）\n2. 非阻塞IO（non-blocking IO）\n3. 多路复用IO（multiplexing IO）\n4. 信号驱动式IO（signal-driven IO）\n5. 异步IO（asynchronous IO）                \n\n\n#### 一. 同步阻塞IO\n![sync-blockpng](Linux-io-model/sync-block.png)\n- 两个步骤：\n\n   1. 步骤一：用户空间的应用程序执行一个系统调用（recvform），linux kernel开始IO的第一阶段：准备数据。这会导致应用程序阻塞（进程自己选择的阻塞），什么也不干，直到数据准备好。\n   2. 步骤二：当kernel一直等到数据准备好了，它就会将数据从kernel中拷贝到用户内存，然后kernel返回结果，用户进程才解除block的状态，重新运行起来。数据从内核复制到用户进程，最后进程再处理数据，在等待数据到处理数据的两个阶段，整个进程都被阻塞。\n\n#### 二. 同步非阻塞IO\n![sync-nonblockpng](Linux-io-model/sync-nonblock.png)\n>同步非阻塞就是通过轮训的方式（轮训执行系统调用），去判断数据是否准备好（轮训者：程序进程）\n需要注意，拷贝数据整个过程，进程仍然是属于阻塞的状态。\n\n\n#### 三. IO多路复用\n![async-blockpng](Linux-io-model/async-block.png)\n\n\n>强调一点就是，IO多路复用模型并没有涉及到非阻塞，进程在发出select后，要一直阻塞等待其监听的所有IO操作至少有一个数据准备好才返回，强调阻塞状态，不存在非阻塞。\n而在 Java NIO中也可以实现多路复用，主要是利用多路复用器 Selector，与这里的 select函数类型，Selector会不断轮询注册在其上的通道Channel，如果有某一个Channel上面发生读或写事件，这个Channel处于就绪状态，就会被Selector轮询出来。关于Java NIO实现多路复用更多的介绍请查询相关文章。\n\n\nMore info:[参考文章](https://www.jianshu.com/p/486b0965c296)","source":"_posts/Linux-io-model.md","raw":"---\ntitle: Linux-io模型\ndate: 2019-04-11 15:43:10\ncategories: Linux\ntags: Linux IO\n---\n### 前言\n先了解一下同步、异步、阻塞、非阻塞的相关概念。\n\n- 同步：一般指的是程序的顺序执行\n```\n    public class TestClass{\n        public static void main(String[] args) {\n            A();\n        }\n        public static void A() {\n            System.out.println(\"A执行\");\n            B();\n            System.out.println(\"A执行完成\");\n        }\n        \n        public static void B() {\n            System.out.println(\"B执行\");\n            while(true) {\n                ....\n            }\n            System.out.println(\"B执行完成\");\n        }\n    }\n```    \n>从该例子中，只有当B()执行完成后，A()方法才会输出\"A执行完成\"，这就是同步。\n    整个处理过程顺序执行，当各个过程都执行完毕，并返回结果。是一种线性执行的方式，执行的流程不能跨越\n    \n<!--more-->    \n    \n- 异步：ajax就是最好的例子\n```\n    function ajaxTest() {\n        console.log(\"方法开始执行\");\n        $.ajax({\n            url: \"/A/remoteCall\",\n            type: \"post\",\n            success: function (data) {\n                while(true) {\n                    console.log(\"方法开始执行\");\n                }\n            }\n        });\n        console.log(\"方法执行结束\");\n    }\n```\n>方法执行，不需要等待ajax的返回结果。\n    \n- 阻塞：一般指的是线程的状态\n```\n    public Result export) {\n            try {\n                InputStream inputStream = new ByteArrayInputStream(ExcelUtil.getInstance().export(excelDataList, map, groupIdNameMap).toByteArray());\n                FileCopyUtils.copy(inputStream, outputStream);\n            } catch (Exception e) {\n                log.error(\"导出Excel出错了\", e);\n                result.setMessage(\"操作失败!\");\n                result.setStatus(REST_STATUS.FAILD_EXCEPTION);\n            }\n            return result;\n        }\n```\n>例如导出中，操作系统读取文件返回花较长时间，程序不会往下执行，进入阻塞状态。    \n    \nMore info: [参考文章](https://www.jianshu.com/p/aed6067eeac9)    \n    \n    \n### Linux IO模型\n\n1. 阻塞IO（bloking IO）\n2. 非阻塞IO（non-blocking IO）\n3. 多路复用IO（multiplexing IO）\n4. 信号驱动式IO（signal-driven IO）\n5. 异步IO（asynchronous IO）                \n\n\n#### 一. 同步阻塞IO\n![sync-blockpng](Linux-io-model/sync-block.png)\n- 两个步骤：\n\n   1. 步骤一：用户空间的应用程序执行一个系统调用（recvform），linux kernel开始IO的第一阶段：准备数据。这会导致应用程序阻塞（进程自己选择的阻塞），什么也不干，直到数据准备好。\n   2. 步骤二：当kernel一直等到数据准备好了，它就会将数据从kernel中拷贝到用户内存，然后kernel返回结果，用户进程才解除block的状态，重新运行起来。数据从内核复制到用户进程，最后进程再处理数据，在等待数据到处理数据的两个阶段，整个进程都被阻塞。\n\n#### 二. 同步非阻塞IO\n![sync-nonblockpng](Linux-io-model/sync-nonblock.png)\n>同步非阻塞就是通过轮训的方式（轮训执行系统调用），去判断数据是否准备好（轮训者：程序进程）\n需要注意，拷贝数据整个过程，进程仍然是属于阻塞的状态。\n\n\n#### 三. IO多路复用\n![async-blockpng](Linux-io-model/async-block.png)\n\n\n>强调一点就是，IO多路复用模型并没有涉及到非阻塞，进程在发出select后，要一直阻塞等待其监听的所有IO操作至少有一个数据准备好才返回，强调阻塞状态，不存在非阻塞。\n而在 Java NIO中也可以实现多路复用，主要是利用多路复用器 Selector，与这里的 select函数类型，Selector会不断轮询注册在其上的通道Channel，如果有某一个Channel上面发生读或写事件，这个Channel处于就绪状态，就会被Selector轮询出来。关于Java NIO实现多路复用更多的介绍请查询相关文章。\n\n\nMore info:[参考文章](https://www.jianshu.com/p/486b0965c296)","slug":"Linux-io-model","published":1,"updated":"2019-08-17T10:01:55.734Z","_id":"cjyhdljnj0000j9s6zmvneqzs","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>先了解一下同步、异步、阻塞、非阻塞的相关概念。</p>\n<ul>\n<li><p>同步：一般指的是程序的顺序执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    public class TestClass&#123;</span><br><span class=\"line\">        public static void main(String[] args) &#123;</span><br><span class=\"line\">            A();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        public static void A() &#123;</span><br><span class=\"line\">            System.out.println(&quot;A执行&quot;);</span><br><span class=\"line\">            B();</span><br><span class=\"line\">            System.out.println(&quot;A执行完成&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        public static void B() &#123;</span><br><span class=\"line\">            System.out.println(&quot;B执行&quot;);</span><br><span class=\"line\">            while(true) &#123;</span><br><span class=\"line\">                ....</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(&quot;B执行完成&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">```    </span><br><span class=\"line\">&gt;从该例子中，只有当B()执行完成后，A()方法才会输出&quot;A执行完成&quot;，这就是同步。</span><br><span class=\"line\">    整个处理过程顺序执行，当各个过程都执行完毕，并返回结果。是一种线性执行的方式，执行的流程不能跨越</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;!--more--&gt;    </span><br><span class=\"line\">    </span><br><span class=\"line\">- 异步：ajax就是最好的例子</span><br></pre></td></tr></table></figure>\n\n<p>  function ajaxTest() {</p>\n<pre><code>console.log(&quot;方法开始执行&quot;);\n$.ajax({\n    url: &quot;/A/remoteCall&quot;,\n    type: &quot;post&quot;,\n    success: function (data) {\n        while(true) {\n            console.log(&quot;方法开始执行&quot;);\n        }\n    }\n});\nconsole.log(&quot;方法执行结束&quot;);</code></pre><p>  }</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;方法执行，不需要等待ajax的返回结果。</span><br><span class=\"line\">    </span><br><span class=\"line\">- 阻塞：一般指的是线程的状态</span><br></pre></td></tr></table></figure>\n\n<p>  public Result export) {</p>\n<pre><code>    try {\n        InputStream inputStream = new ByteArrayInputStream(ExcelUtil.getInstance().export(excelDataList, map, groupIdNameMap).toByteArray());\n        FileCopyUtils.copy(inputStream, outputStream);\n    } catch (Exception e) {\n        log.error(&quot;导出Excel出错了&quot;, e);\n        result.setMessage(&quot;操作失败!&quot;);\n        result.setStatus(REST_STATUS.FAILD_EXCEPTION);\n    }\n    return result;\n}</code></pre><pre><code>&gt;例如导出中，操作系统读取文件返回花较长时间，程序不会往下执行，进入阻塞状态。    \n</code></pre></li>\n</ul>\n<p>More info: <a href=\"https://www.jianshu.com/p/aed6067eeac9\" target=\"_blank\" rel=\"noopener\">参考文章</a>    </p>\n<h3 id=\"Linux-IO模型\"><a href=\"#Linux-IO模型\" class=\"headerlink\" title=\"Linux IO模型\"></a>Linux IO模型</h3><ol>\n<li>阻塞IO（bloking IO）</li>\n<li>非阻塞IO（non-blocking IO）</li>\n<li>多路复用IO（multiplexing IO）</li>\n<li>信号驱动式IO（signal-driven IO）</li>\n<li>异步IO（asynchronous IO）                </li>\n</ol>\n<h4 id=\"一-同步阻塞IO\"><a href=\"#一-同步阻塞IO\" class=\"headerlink\" title=\"一. 同步阻塞IO\"></a>一. 同步阻塞IO</h4><p><img src=\"/2019/04/11/Linux-io-model/sync-block.png\" alt=\"sync-blockpng\"></p>\n<ul>\n<li><p>两个步骤：</p>\n<ol>\n<li>步骤一：用户空间的应用程序执行一个系统调用（recvform），linux kernel开始IO的第一阶段：准备数据。这会导致应用程序阻塞（进程自己选择的阻塞），什么也不干，直到数据准备好。</li>\n<li>步骤二：当kernel一直等到数据准备好了，它就会将数据从kernel中拷贝到用户内存，然后kernel返回结果，用户进程才解除block的状态，重新运行起来。数据从内核复制到用户进程，最后进程再处理数据，在等待数据到处理数据的两个阶段，整个进程都被阻塞。</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"二-同步非阻塞IO\"><a href=\"#二-同步非阻塞IO\" class=\"headerlink\" title=\"二. 同步非阻塞IO\"></a>二. 同步非阻塞IO</h4><p><img src=\"/2019/04/11/Linux-io-model/sync-nonblock.png\" alt=\"sync-nonblockpng\"></p>\n<blockquote>\n<p>同步非阻塞就是通过轮训的方式（轮训执行系统调用），去判断数据是否准备好（轮训者：程序进程）<br>需要注意，拷贝数据整个过程，进程仍然是属于阻塞的状态。</p>\n</blockquote>\n<h4 id=\"三-IO多路复用\"><a href=\"#三-IO多路复用\" class=\"headerlink\" title=\"三. IO多路复用\"></a>三. IO多路复用</h4><p><img src=\"/2019/04/11/Linux-io-model/async-block.png\" alt=\"async-blockpng\"></p>\n<blockquote>\n<p>强调一点就是，IO多路复用模型并没有涉及到非阻塞，进程在发出select后，要一直阻塞等待其监听的所有IO操作至少有一个数据准备好才返回，强调阻塞状态，不存在非阻塞。<br>而在 Java NIO中也可以实现多路复用，主要是利用多路复用器 Selector，与这里的 select函数类型，Selector会不断轮询注册在其上的通道Channel，如果有某一个Channel上面发生读或写事件，这个Channel处于就绪状态，就会被Selector轮询出来。关于Java NIO实现多路复用更多的介绍请查询相关文章。</p>\n</blockquote>\n<p>More info:<a href=\"https://www.jianshu.com/p/486b0965c296\" target=\"_blank\" rel=\"noopener\">参考文章</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>先了解一下同步、异步、阻塞、非阻塞的相关概念。</p>\n<ul>\n<li><p>同步：一般指的是程序的顺序执行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    public class TestClass&#123;</span><br><span class=\"line\">        public static void main(String[] args) &#123;</span><br><span class=\"line\">            A();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        public static void A() &#123;</span><br><span class=\"line\">            System.out.println(&quot;A执行&quot;);</span><br><span class=\"line\">            B();</span><br><span class=\"line\">            System.out.println(&quot;A执行完成&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">        public static void B() &#123;</span><br><span class=\"line\">            System.out.println(&quot;B执行&quot;);</span><br><span class=\"line\">            while(true) &#123;</span><br><span class=\"line\">                ....</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(&quot;B执行完成&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">```    </span><br><span class=\"line\">&gt;从该例子中，只有当B()执行完成后，A()方法才会输出&quot;A执行完成&quot;，这就是同步。</span><br><span class=\"line\">    整个处理过程顺序执行，当各个过程都执行完毕，并返回结果。是一种线性执行的方式，执行的流程不能跨越</span><br><span class=\"line\">    </span><br><span class=\"line\">&lt;!--more--&gt;    </span><br><span class=\"line\">    </span><br><span class=\"line\">- 异步：ajax就是最好的例子</span><br></pre></td></tr></table></figure>\n\n<p>  function ajaxTest() {</p>\n<pre><code>console.log(&quot;方法开始执行&quot;);\n$.ajax({\n    url: &quot;/A/remoteCall&quot;,\n    type: &quot;post&quot;,\n    success: function (data) {\n        while(true) {\n            console.log(&quot;方法开始执行&quot;);\n        }\n    }\n});\nconsole.log(&quot;方法执行结束&quot;);</code></pre><p>  }</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;方法执行，不需要等待ajax的返回结果。</span><br><span class=\"line\">    </span><br><span class=\"line\">- 阻塞：一般指的是线程的状态</span><br></pre></td></tr></table></figure>\n\n<p>  public Result export) {</p>\n<pre><code>    try {\n        InputStream inputStream = new ByteArrayInputStream(ExcelUtil.getInstance().export(excelDataList, map, groupIdNameMap).toByteArray());\n        FileCopyUtils.copy(inputStream, outputStream);\n    } catch (Exception e) {\n        log.error(&quot;导出Excel出错了&quot;, e);\n        result.setMessage(&quot;操作失败!&quot;);\n        result.setStatus(REST_STATUS.FAILD_EXCEPTION);\n    }\n    return result;\n}</code></pre><pre><code>&gt;例如导出中，操作系统读取文件返回花较长时间，程序不会往下执行，进入阻塞状态。    \n</code></pre></li>\n</ul>\n<p>More info: <a href=\"https://www.jianshu.com/p/aed6067eeac9\" target=\"_blank\" rel=\"noopener\">参考文章</a>    </p>\n<h3 id=\"Linux-IO模型\"><a href=\"#Linux-IO模型\" class=\"headerlink\" title=\"Linux IO模型\"></a>Linux IO模型</h3><ol>\n<li>阻塞IO（bloking IO）</li>\n<li>非阻塞IO（non-blocking IO）</li>\n<li>多路复用IO（multiplexing IO）</li>\n<li>信号驱动式IO（signal-driven IO）</li>\n<li>异步IO（asynchronous IO）                </li>\n</ol>\n<h4 id=\"一-同步阻塞IO\"><a href=\"#一-同步阻塞IO\" class=\"headerlink\" title=\"一. 同步阻塞IO\"></a>一. 同步阻塞IO</h4><p><img src=\"/2019/04/11/Linux-io-model/sync-block.png\" alt=\"sync-blockpng\"></p>\n<ul>\n<li><p>两个步骤：</p>\n<ol>\n<li>步骤一：用户空间的应用程序执行一个系统调用（recvform），linux kernel开始IO的第一阶段：准备数据。这会导致应用程序阻塞（进程自己选择的阻塞），什么也不干，直到数据准备好。</li>\n<li>步骤二：当kernel一直等到数据准备好了，它就会将数据从kernel中拷贝到用户内存，然后kernel返回结果，用户进程才解除block的状态，重新运行起来。数据从内核复制到用户进程，最后进程再处理数据，在等待数据到处理数据的两个阶段，整个进程都被阻塞。</li>\n</ol>\n</li>\n</ul>\n<h4 id=\"二-同步非阻塞IO\"><a href=\"#二-同步非阻塞IO\" class=\"headerlink\" title=\"二. 同步非阻塞IO\"></a>二. 同步非阻塞IO</h4><p><img src=\"/2019/04/11/Linux-io-model/sync-nonblock.png\" alt=\"sync-nonblockpng\"></p>\n<blockquote>\n<p>同步非阻塞就是通过轮训的方式（轮训执行系统调用），去判断数据是否准备好（轮训者：程序进程）<br>需要注意，拷贝数据整个过程，进程仍然是属于阻塞的状态。</p>\n</blockquote>\n<h4 id=\"三-IO多路复用\"><a href=\"#三-IO多路复用\" class=\"headerlink\" title=\"三. IO多路复用\"></a>三. IO多路复用</h4><p><img src=\"/2019/04/11/Linux-io-model/async-block.png\" alt=\"async-blockpng\"></p>\n<blockquote>\n<p>强调一点就是，IO多路复用模型并没有涉及到非阻塞，进程在发出select后，要一直阻塞等待其监听的所有IO操作至少有一个数据准备好才返回，强调阻塞状态，不存在非阻塞。<br>而在 Java NIO中也可以实现多路复用，主要是利用多路复用器 Selector，与这里的 select函数类型，Selector会不断轮询注册在其上的通道Channel，如果有某一个Channel上面发生读或写事件，这个Channel处于就绪状态，就会被Selector轮询出来。关于Java NIO实现多路复用更多的介绍请查询相关文章。</p>\n</blockquote>\n<p>More info:<a href=\"https://www.jianshu.com/p/486b0965c296\" target=\"_blank\" rel=\"noopener\">参考文章</a></p>\n"},{"title":"MQ常识","date":"2019-07-24T14:29:49.000Z","_content":"\n### 1、高可用\n\n","source":"_posts/MQ.md","raw":"---\ntitle: MQ常识\ndate: 2019-07-24 22:29:49\ncategories: MQ\n---\n\n### 1、高可用\n\n","slug":"MQ","published":1,"updated":"2019-07-24T15:02:05.903Z","_id":"cjyhdljnr0002j9s64zlra7i5","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"1、高可用\"><a href=\"#1、高可用\" class=\"headerlink\" title=\"1、高可用\"></a>1、高可用</h3>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1、高可用\"><a href=\"#1、高可用\" class=\"headerlink\" title=\"1、高可用\"></a>1、高可用</h3>"},{"title":"bio","date":"2019-05-18T14:11:10.000Z","_content":"\n从代码层次了解BIO\n\n    //服务端\n    public class BioServer {\n    \n        public static void main(String[] args) {\n            byte[] bs = new byte[1024];\n            try {\n                //服务端的监听socket，只负责监听连接，监听的端口是：9878\n                ServerSocket serverSocket = new ServerSocket();\n                serverSocket.bind(new InetSocketAddress(9878));\n    \n                while (true) {//可以进行下一次的通信\n                    System.out.println(\"等待连接\");\n                    Socket accept = serverSocket.accept();//服务端进程将阻塞(将释放CPU资源)，直至连接请求过来，然后会生成一个socket\n                    //accept，这个socket是负责和客户端数据交换的\n                    System.out.println(\"连接成功\");\n    \n                    System.out.println(\"等待数据\");\n                    int readCount = accept.getInputStream().read(bs);//read也将阻塞\n                    System.out.println(\"数据获取成功\");\n                    System.out.println(\"读取的数量=\" + readCount);\n                    String content = bs.toString();\n                    System.out.println(\"读取的内容为：\" + content);\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n    \n    //客户端\n    public class BioClient {\n    \n        public static void main(String[] args) {\n            Socket socket = new Socket();\n            socket.connect(new InetSocketAddress(\"127.0.0.1\", 9878));\n            \n            \n        }\n    }\n    \n<!--more-->\n以下是图形解释\n\n![bio-1](bio/bio.png)\n\nbio：accept(),read()两个阻塞，如果采用单线程时，无法处理并发。当上一个连接未处理完成，server端则不会处理其他客户端请求。\n\nbio的优化方式：\n1、多线程方式，主线程负责连接，子线程数据交换\n\n    while (true) {//可以进行下一次的通信\n        System.out.println(\"等待连接\");\n        Socket accept = serverSocket.accept();//服务端进程将阻塞(将释放CPU资源)，直至连接请求过来，然后会生成一个socket\n        //accept，这个socket是负责和客户端数据交换的\n        System.out.println(\"连接成功\");\n\n        Threa thread = new Thread();\n        thread.start();\n        //int readCount = accept.getInputStream().read(bs);//read也将阻塞\n        //System.out.println(\"数据获取成功\");\n        //System.out.println(\"读取的数量=\" + readCount);\n        //String content = bs.toString();\n        //System.out.println(\"读取的内容为：\" + content);\n    }\n缺点：线程利用率太低，大部分线程都是无效线程（不会进行数据传输）\n使用多线程方式，需要考虑线程利用率，线程都是用来数据传输。    \n    ","source":"_posts/bio.md","raw":"---\ntitle: bio\ndate: 2019-05-18 22:11:10\ntags: bio\ncategories: io\n---\n\n从代码层次了解BIO\n\n    //服务端\n    public class BioServer {\n    \n        public static void main(String[] args) {\n            byte[] bs = new byte[1024];\n            try {\n                //服务端的监听socket，只负责监听连接，监听的端口是：9878\n                ServerSocket serverSocket = new ServerSocket();\n                serverSocket.bind(new InetSocketAddress(9878));\n    \n                while (true) {//可以进行下一次的通信\n                    System.out.println(\"等待连接\");\n                    Socket accept = serverSocket.accept();//服务端进程将阻塞(将释放CPU资源)，直至连接请求过来，然后会生成一个socket\n                    //accept，这个socket是负责和客户端数据交换的\n                    System.out.println(\"连接成功\");\n    \n                    System.out.println(\"等待数据\");\n                    int readCount = accept.getInputStream().read(bs);//read也将阻塞\n                    System.out.println(\"数据获取成功\");\n                    System.out.println(\"读取的数量=\" + readCount);\n                    String content = bs.toString();\n                    System.out.println(\"读取的内容为：\" + content);\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n    \n    //客户端\n    public class BioClient {\n    \n        public static void main(String[] args) {\n            Socket socket = new Socket();\n            socket.connect(new InetSocketAddress(\"127.0.0.1\", 9878));\n            \n            \n        }\n    }\n    \n<!--more-->\n以下是图形解释\n\n![bio-1](bio/bio.png)\n\nbio：accept(),read()两个阻塞，如果采用单线程时，无法处理并发。当上一个连接未处理完成，server端则不会处理其他客户端请求。\n\nbio的优化方式：\n1、多线程方式，主线程负责连接，子线程数据交换\n\n    while (true) {//可以进行下一次的通信\n        System.out.println(\"等待连接\");\n        Socket accept = serverSocket.accept();//服务端进程将阻塞(将释放CPU资源)，直至连接请求过来，然后会生成一个socket\n        //accept，这个socket是负责和客户端数据交换的\n        System.out.println(\"连接成功\");\n\n        Threa thread = new Thread();\n        thread.start();\n        //int readCount = accept.getInputStream().read(bs);//read也将阻塞\n        //System.out.println(\"数据获取成功\");\n        //System.out.println(\"读取的数量=\" + readCount);\n        //String content = bs.toString();\n        //System.out.println(\"读取的内容为：\" + content);\n    }\n缺点：线程利用率太低，大部分线程都是无效线程（不会进行数据传输）\n使用多线程方式，需要考虑线程利用率，线程都是用来数据传输。    \n    ","slug":"bio","published":1,"updated":"2019-07-25T14:58:36.903Z","_id":"cjyhdljnv0005j9s6ew85k75p","comments":1,"layout":"post","photos":[],"link":"","content":"<p>从代码层次了解BIO</p>\n<pre><code>//服务端\npublic class BioServer {\n\n    public static void main(String[] args) {\n        byte[] bs = new byte[1024];\n        try {\n            //服务端的监听socket，只负责监听连接，监听的端口是：9878\n            ServerSocket serverSocket = new ServerSocket();\n            serverSocket.bind(new InetSocketAddress(9878));\n\n            while (true) {//可以进行下一次的通信\n                System.out.println(&quot;等待连接&quot;);\n                Socket accept = serverSocket.accept();//服务端进程将阻塞(将释放CPU资源)，直至连接请求过来，然后会生成一个socket\n                //accept，这个socket是负责和客户端数据交换的\n                System.out.println(&quot;连接成功&quot;);\n\n                System.out.println(&quot;等待数据&quot;);\n                int readCount = accept.getInputStream().read(bs);//read也将阻塞\n                System.out.println(&quot;数据获取成功&quot;);\n                System.out.println(&quot;读取的数量=&quot; + readCount);\n                String content = bs.toString();\n                System.out.println(&quot;读取的内容为：&quot; + content);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n\n//客户端\npublic class BioClient {\n\n    public static void main(String[] args) {\n        Socket socket = new Socket();\n        socket.connect(new InetSocketAddress(&quot;127.0.0.1&quot;, 9878));\n\n\n    }\n}</code></pre><a id=\"more\"></a>\n<p>以下是图形解释</p>\n<p><img src=\"/2019/05/18/bio/bio.png\" alt=\"bio-1\"></p>\n<p>bio：accept(),read()两个阻塞，如果采用单线程时，无法处理并发。当上一个连接未处理完成，server端则不会处理其他客户端请求。</p>\n<p>bio的优化方式：<br>1、多线程方式，主线程负责连接，子线程数据交换</p>\n<pre><code>while (true) {//可以进行下一次的通信\n    System.out.println(&quot;等待连接&quot;);\n    Socket accept = serverSocket.accept();//服务端进程将阻塞(将释放CPU资源)，直至连接请求过来，然后会生成一个socket\n    //accept，这个socket是负责和客户端数据交换的\n    System.out.println(&quot;连接成功&quot;);\n\n    Threa thread = new Thread();\n    thread.start();\n    //int readCount = accept.getInputStream().read(bs);//read也将阻塞\n    //System.out.println(&quot;数据获取成功&quot;);\n    //System.out.println(&quot;读取的数量=&quot; + readCount);\n    //String content = bs.toString();\n    //System.out.println(&quot;读取的内容为：&quot; + content);\n}</code></pre><p>缺点：线程利用率太低，大部分线程都是无效线程（不会进行数据传输）<br>使用多线程方式，需要考虑线程利用率，线程都是用来数据传输。    </p>\n","site":{"data":{}},"excerpt":"<p>从代码层次了解BIO</p>\n<pre><code>//服务端\npublic class BioServer {\n\n    public static void main(String[] args) {\n        byte[] bs = new byte[1024];\n        try {\n            //服务端的监听socket，只负责监听连接，监听的端口是：9878\n            ServerSocket serverSocket = new ServerSocket();\n            serverSocket.bind(new InetSocketAddress(9878));\n\n            while (true) {//可以进行下一次的通信\n                System.out.println(&quot;等待连接&quot;);\n                Socket accept = serverSocket.accept();//服务端进程将阻塞(将释放CPU资源)，直至连接请求过来，然后会生成一个socket\n                //accept，这个socket是负责和客户端数据交换的\n                System.out.println(&quot;连接成功&quot;);\n\n                System.out.println(&quot;等待数据&quot;);\n                int readCount = accept.getInputStream().read(bs);//read也将阻塞\n                System.out.println(&quot;数据获取成功&quot;);\n                System.out.println(&quot;读取的数量=&quot; + readCount);\n                String content = bs.toString();\n                System.out.println(&quot;读取的内容为：&quot; + content);\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n\n//客户端\npublic class BioClient {\n\n    public static void main(String[] args) {\n        Socket socket = new Socket();\n        socket.connect(new InetSocketAddress(&quot;127.0.0.1&quot;, 9878));\n\n\n    }\n}</code></pre>","more":"<p>以下是图形解释</p>\n<p><img src=\"/2019/05/18/bio/bio.png\" alt=\"bio-1\"></p>\n<p>bio：accept(),read()两个阻塞，如果采用单线程时，无法处理并发。当上一个连接未处理完成，server端则不会处理其他客户端请求。</p>\n<p>bio的优化方式：<br>1、多线程方式，主线程负责连接，子线程数据交换</p>\n<pre><code>while (true) {//可以进行下一次的通信\n    System.out.println(&quot;等待连接&quot;);\n    Socket accept = serverSocket.accept();//服务端进程将阻塞(将释放CPU资源)，直至连接请求过来，然后会生成一个socket\n    //accept，这个socket是负责和客户端数据交换的\n    System.out.println(&quot;连接成功&quot;);\n\n    Threa thread = new Thread();\n    thread.start();\n    //int readCount = accept.getInputStream().read(bs);//read也将阻塞\n    //System.out.println(&quot;数据获取成功&quot;);\n    //System.out.println(&quot;读取的数量=&quot; + readCount);\n    //String content = bs.toString();\n    //System.out.println(&quot;读取的内容为：&quot; + content);\n}</code></pre><p>缺点：线程利用率太低，大部分线程都是无效线程（不会进行数据传输）<br>使用多线程方式，需要考虑线程利用率，线程都是用来数据传输。    </p>"},{"title":"nio","date":"2019-06-14T15:00:42.000Z","_content":"从上篇bio文章，我们了解了传统socket连接为阻塞IO，然后了解了bio的多线程优化方式及其缺点。多路复用则是另外一种优化方式。\n\n一、nio的设计思想\n\n![nio-1](nio/nio-common.png)\n\n以下是代码设计思想\n```\n    //服务端\n    public class BioServer {\n    \n        public static void main(String[] args) {\n            List<Socket> socketList = Lists.newArrayList();\n            \n            byte[] bs = new byte[1024];\n            try {\n                //服务端的监听socket，只负责监听连接，监听的端口是：9878\n                ServerSocket serverSocket = new ServerSocket();\n                serverSocket.bind(new InetSocketAddress(9878));\n                serverSocket.setBlock(false);//伪代码，表示设置serverSocket为非阻塞\n    \n                while (true) {//可以进行下一次的通信\n                    Socket accept = serverSocket.accept();\n                    if (accept == null) {\n                        //表示该次while中，无新连接\n                        socketList.forEach(socket -> {\n                            //遍历socket，看是否有数据发过来\n                            int readCount = socket.getInputStream().read(bs);\n                            if(readCount > 0) {\n                                //输出\n                            }\n                        });\n                    } else {\n                        accept.setBlock(false);//伪代码，表示socket.read为非阻塞\n                        socketList.add(accept);                            \n                        socketList.forEach(socket -> {\n                            int readCount = socket.getInputStream().read(bs);\n                            if(readCount > 0) {\n                                //输出\n                            }\n                        });\n                    \n                    }\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n    \n    //服务端\n        ServerSocketChannel serverChannel = ServerSocketChannel.open();\n        serverChannel.configureBlocking(false);\n        serverChannel.socket().bind(new InetSocketAddress(port));\n        Selector selector = Selector.open();\n        serverChannel.register(selector, SelectionKey.OP_ACCEPT);\n        while(true){\n            int n = selector.select();\n            if (n == 0) continue;\n            Iterator ite = this.selector.selectedKeys().iterator();\n            while(ite.hasNext()){\n                SelectionKey key = (SelectionKey)ite.next();\n                if (key.isAcceptable()){\n                    SocketChannel clntChan = ((ServerSocketChannel) key.channel()).accept();\n                    clntChan.configureBlocking(false);\n                    //将选择器注册到连接到的客户端信道，\n                    //并指定该信道key值的属性为OP_READ，\n                    //同时为该信道指定关联的附件\n                    clntChan.register(key.selector(), SelectionKey.OP_READ, ByteBuffer.allocate(bufSize));\n                }\n                if (key.isReadable()){\n                    handleRead(key);\n                }\n                if (key.isWritable() && key.isValid()){\n                    handleWrite(key);\n                }\n                if (key.isConnectable()){\n                    System.out.println(\"isConnectable = true\");\n                }\n              ite.remove();\n            }\n        }\n```      \n### 二、多路复用具体实现\n    \n    多路复用是nio模型的一个升级，将由应用程序循环遍历的socket列表交给了内核，由内核去通知应用程序socket是否OK。\n    Linux的select,poll,epoll三种多路复用模式。      \n        \n三、多路复用模式\n\n    Reactor和proactor\n    \nMore info:[参考文章](https://tech.meituan.com/2016/11/04/nio.html)            ","source":"_posts/nio.md","raw":"---\ntitle: nio\ndate: 2019-06-14 23:00:42\ntags: nio\ncategories: io\n---\n从上篇bio文章，我们了解了传统socket连接为阻塞IO，然后了解了bio的多线程优化方式及其缺点。多路复用则是另外一种优化方式。\n\n一、nio的设计思想\n\n![nio-1](nio/nio-common.png)\n\n以下是代码设计思想\n```\n    //服务端\n    public class BioServer {\n    \n        public static void main(String[] args) {\n            List<Socket> socketList = Lists.newArrayList();\n            \n            byte[] bs = new byte[1024];\n            try {\n                //服务端的监听socket，只负责监听连接，监听的端口是：9878\n                ServerSocket serverSocket = new ServerSocket();\n                serverSocket.bind(new InetSocketAddress(9878));\n                serverSocket.setBlock(false);//伪代码，表示设置serverSocket为非阻塞\n    \n                while (true) {//可以进行下一次的通信\n                    Socket accept = serverSocket.accept();\n                    if (accept == null) {\n                        //表示该次while中，无新连接\n                        socketList.forEach(socket -> {\n                            //遍历socket，看是否有数据发过来\n                            int readCount = socket.getInputStream().read(bs);\n                            if(readCount > 0) {\n                                //输出\n                            }\n                        });\n                    } else {\n                        accept.setBlock(false);//伪代码，表示socket.read为非阻塞\n                        socketList.add(accept);                            \n                        socketList.forEach(socket -> {\n                            int readCount = socket.getInputStream().read(bs);\n                            if(readCount > 0) {\n                                //输出\n                            }\n                        });\n                    \n                    }\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n    \n    //服务端\n        ServerSocketChannel serverChannel = ServerSocketChannel.open();\n        serverChannel.configureBlocking(false);\n        serverChannel.socket().bind(new InetSocketAddress(port));\n        Selector selector = Selector.open();\n        serverChannel.register(selector, SelectionKey.OP_ACCEPT);\n        while(true){\n            int n = selector.select();\n            if (n == 0) continue;\n            Iterator ite = this.selector.selectedKeys().iterator();\n            while(ite.hasNext()){\n                SelectionKey key = (SelectionKey)ite.next();\n                if (key.isAcceptable()){\n                    SocketChannel clntChan = ((ServerSocketChannel) key.channel()).accept();\n                    clntChan.configureBlocking(false);\n                    //将选择器注册到连接到的客户端信道，\n                    //并指定该信道key值的属性为OP_READ，\n                    //同时为该信道指定关联的附件\n                    clntChan.register(key.selector(), SelectionKey.OP_READ, ByteBuffer.allocate(bufSize));\n                }\n                if (key.isReadable()){\n                    handleRead(key);\n                }\n                if (key.isWritable() && key.isValid()){\n                    handleWrite(key);\n                }\n                if (key.isConnectable()){\n                    System.out.println(\"isConnectable = true\");\n                }\n              ite.remove();\n            }\n        }\n```      \n### 二、多路复用具体实现\n    \n    多路复用是nio模型的一个升级，将由应用程序循环遍历的socket列表交给了内核，由内核去通知应用程序socket是否OK。\n    Linux的select,poll,epoll三种多路复用模式。      \n        \n三、多路复用模式\n\n    Reactor和proactor\n    \nMore info:[参考文章](https://tech.meituan.com/2016/11/04/nio.html)            ","slug":"nio","published":1,"updated":"2019-08-18T14:16:44.201Z","_id":"cjyhdljnw0006j9s6k0fgx578","comments":1,"layout":"post","photos":[],"link":"","content":"<p>从上篇bio文章，我们了解了传统socket连接为阻塞IO，然后了解了bio的多线程优化方式及其缺点。多路复用则是另外一种优化方式。</p>\n<p>一、nio的设计思想</p>\n<p><img src=\"/2019/06/14/nio/nio-common.png\" alt=\"nio-1\"></p>\n<p>以下是代码设计思想</p>\n<pre><code>//服务端\npublic class BioServer {\n\n    public static void main(String[] args) {\n        List&lt;Socket&gt; socketList = Lists.newArrayList();\n\n        byte[] bs = new byte[1024];\n        try {\n            //服务端的监听socket，只负责监听连接，监听的端口是：9878\n            ServerSocket serverSocket = new ServerSocket();\n            serverSocket.bind(new InetSocketAddress(9878));\n            serverSocket.setBlock(false);//伪代码，表示设置serverSocket为非阻塞\n\n            while (true) {//可以进行下一次的通信\n                Socket accept = serverSocket.accept();\n                if (accept == null) {\n                    //表示该次while中，无新连接\n                    socketList.forEach(socket -&gt; {\n                        //遍历socket，看是否有数据发过来\n                        int readCount = socket.getInputStream().read(bs);\n                        if(readCount &gt; 0) {\n                            //输出\n                        }\n                    });\n                } else {\n                    accept.setBlock(false);//伪代码，表示socket.read为非阻塞\n                    socketList.add(accept);                            \n                    socketList.forEach(socket -&gt; {\n                        int readCount = socket.getInputStream().read(bs);\n                        if(readCount &gt; 0) {\n                            //输出\n                        }\n                    });\n\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n\n//服务端\n    ServerSocketChannel serverChannel = ServerSocketChannel.open();\n    serverChannel.configureBlocking(false);\n    serverChannel.socket().bind(new InetSocketAddress(port));\n    Selector selector = Selector.open();\n    serverChannel.register(selector, SelectionKey.OP_ACCEPT);\n    while(true){\n        int n = selector.select();\n        if (n == 0) continue;\n        Iterator ite = this.selector.selectedKeys().iterator();\n        while(ite.hasNext()){\n            SelectionKey key = (SelectionKey)ite.next();\n            if (key.isAcceptable()){\n                SocketChannel clntChan = ((ServerSocketChannel) key.channel()).accept();\n                clntChan.configureBlocking(false);\n                //将选择器注册到连接到的客户端信道，\n                //并指定该信道key值的属性为OP_READ，\n                //同时为该信道指定关联的附件\n                clntChan.register(key.selector(), SelectionKey.OP_READ, ByteBuffer.allocate(bufSize));\n            }\n            if (key.isReadable()){\n                handleRead(key);\n            }\n            if (key.isWritable() &amp;&amp; key.isValid()){\n                handleWrite(key);\n            }\n            if (key.isConnectable()){\n                System.out.println(&quot;isConnectable = true&quot;);\n            }\n          ite.remove();\n        }\n    }</code></pre><h3 id=\"二、多路复用具体实现\"><a href=\"#二、多路复用具体实现\" class=\"headerlink\" title=\"二、多路复用具体实现\"></a>二、多路复用具体实现</h3><pre><code>多路复用是nio模型的一个升级，将由应用程序循环遍历的socket列表交给了内核，由内核去通知应用程序socket是否OK。\nLinux的select,poll,epoll三种多路复用模式。      </code></pre><p>三、多路复用模式</p>\n<pre><code>Reactor和proactor</code></pre><p>More info:<a href=\"https://tech.meituan.com/2016/11/04/nio.html\" target=\"_blank\" rel=\"noopener\">参考文章</a>            </p>\n","site":{"data":{}},"excerpt":"","more":"<p>从上篇bio文章，我们了解了传统socket连接为阻塞IO，然后了解了bio的多线程优化方式及其缺点。多路复用则是另外一种优化方式。</p>\n<p>一、nio的设计思想</p>\n<p><img src=\"/2019/06/14/nio/nio-common.png\" alt=\"nio-1\"></p>\n<p>以下是代码设计思想</p>\n<pre><code>//服务端\npublic class BioServer {\n\n    public static void main(String[] args) {\n        List&lt;Socket&gt; socketList = Lists.newArrayList();\n\n        byte[] bs = new byte[1024];\n        try {\n            //服务端的监听socket，只负责监听连接，监听的端口是：9878\n            ServerSocket serverSocket = new ServerSocket();\n            serverSocket.bind(new InetSocketAddress(9878));\n            serverSocket.setBlock(false);//伪代码，表示设置serverSocket为非阻塞\n\n            while (true) {//可以进行下一次的通信\n                Socket accept = serverSocket.accept();\n                if (accept == null) {\n                    //表示该次while中，无新连接\n                    socketList.forEach(socket -&gt; {\n                        //遍历socket，看是否有数据发过来\n                        int readCount = socket.getInputStream().read(bs);\n                        if(readCount &gt; 0) {\n                            //输出\n                        }\n                    });\n                } else {\n                    accept.setBlock(false);//伪代码，表示socket.read为非阻塞\n                    socketList.add(accept);                            \n                    socketList.forEach(socket -&gt; {\n                        int readCount = socket.getInputStream().read(bs);\n                        if(readCount &gt; 0) {\n                            //输出\n                        }\n                    });\n\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}\n\n//服务端\n    ServerSocketChannel serverChannel = ServerSocketChannel.open();\n    serverChannel.configureBlocking(false);\n    serverChannel.socket().bind(new InetSocketAddress(port));\n    Selector selector = Selector.open();\n    serverChannel.register(selector, SelectionKey.OP_ACCEPT);\n    while(true){\n        int n = selector.select();\n        if (n == 0) continue;\n        Iterator ite = this.selector.selectedKeys().iterator();\n        while(ite.hasNext()){\n            SelectionKey key = (SelectionKey)ite.next();\n            if (key.isAcceptable()){\n                SocketChannel clntChan = ((ServerSocketChannel) key.channel()).accept();\n                clntChan.configureBlocking(false);\n                //将选择器注册到连接到的客户端信道，\n                //并指定该信道key值的属性为OP_READ，\n                //同时为该信道指定关联的附件\n                clntChan.register(key.selector(), SelectionKey.OP_READ, ByteBuffer.allocate(bufSize));\n            }\n            if (key.isReadable()){\n                handleRead(key);\n            }\n            if (key.isWritable() &amp;&amp; key.isValid()){\n                handleWrite(key);\n            }\n            if (key.isConnectable()){\n                System.out.println(&quot;isConnectable = true&quot;);\n            }\n          ite.remove();\n        }\n    }</code></pre><h3 id=\"二、多路复用具体实现\"><a href=\"#二、多路复用具体实现\" class=\"headerlink\" title=\"二、多路复用具体实现\"></a>二、多路复用具体实现</h3><pre><code>多路复用是nio模型的一个升级，将由应用程序循环遍历的socket列表交给了内核，由内核去通知应用程序socket是否OK。\nLinux的select,poll,epoll三种多路复用模式。      </code></pre><p>三、多路复用模式</p>\n<pre><code>Reactor和proactor</code></pre><p>More info:<a href=\"https://tech.meituan.com/2016/11/04/nio.html\" target=\"_blank\" rel=\"noopener\">参考文章</a>            </p>\n"},{"title":"CAS Shiro 单点登录 权限控制","date":"2019-03-05T06:25:22.000Z","_content":"这篇文章，将从登陆、登出流程，详细讲解CAS+Shiro的执行过程。\n## 开始\nuum：一个基于RBAC（Role-Based Access Control ）的权限系统（CAS client + shiro）\nsso：CAS server，负责认证授权\n\n> ### 登陆流程:\n\n这里将以时序图的方式展现。\n\n<!--more-->\n![cas-login](cas-sso/cas-login.svg)\n\n> ### 登出流程:\n\n这里将以时序图的方式展现。\n![cas-login](cas-sso/cas-logout.svg)\n\n**局限性：**\n>  * 采用shiro，各业务系统保存了用户信息，无统一保存用户信息容器，当用户改变，无法立即全局生效；并且退出时，需要发送MQ去清空各业务系统的信息，将导致MQ压力增大。\n>  * 若设计不合理，SSO认证过程会很长，并且用户授权信息将很大，增加SSO服务压力。\n\n**个人感悟**\n针对上面现阶段系统的局限性，以下是个人优化想法：\n>  * 认证过程，只验证用户的登录名密码。CAS client根据需要，再调用服务去获取用户授权信息，并将信息统一存放至Redis。\n>  * 用户退出，清空Redis中的用户信息，\n\n参考博客：\n[shiro 登录授权过程详细解析](https://my.oschina.net/u/2415799/blog/865526)\n[CAS 4.1.10 版本服務端原始碼解讀](https://www.codetw.com/lyxepf.html)\n[从http验证流程解析CAS单点登录](https://www.jianshu.com/p/5ef9407c71af)\n[CAS的详细登录流程](https://blog.csdn.net/qq_34246546/article/details/79493208)\n[前端关于单点登录SSO的知识](https://juejin.im/post/5b8116afe51d4538d23db11e)\n<!--more-->","source":"_posts/cas-sso.md","raw":"---\ntitle: CAS Shiro 单点登录 权限控制\ndate: 2019-03-05 14:25:22\ntags: CAS Shiro 单点登录 权限控制\ncategories: 单点登录\n---\n这篇文章，将从登陆、登出流程，详细讲解CAS+Shiro的执行过程。\n## 开始\nuum：一个基于RBAC（Role-Based Access Control ）的权限系统（CAS client + shiro）\nsso：CAS server，负责认证授权\n\n> ### 登陆流程:\n\n这里将以时序图的方式展现。\n\n<!--more-->\n![cas-login](cas-sso/cas-login.svg)\n\n> ### 登出流程:\n\n这里将以时序图的方式展现。\n![cas-login](cas-sso/cas-logout.svg)\n\n**局限性：**\n>  * 采用shiro，各业务系统保存了用户信息，无统一保存用户信息容器，当用户改变，无法立即全局生效；并且退出时，需要发送MQ去清空各业务系统的信息，将导致MQ压力增大。\n>  * 若设计不合理，SSO认证过程会很长，并且用户授权信息将很大，增加SSO服务压力。\n\n**个人感悟**\n针对上面现阶段系统的局限性，以下是个人优化想法：\n>  * 认证过程，只验证用户的登录名密码。CAS client根据需要，再调用服务去获取用户授权信息，并将信息统一存放至Redis。\n>  * 用户退出，清空Redis中的用户信息，\n\n参考博客：\n[shiro 登录授权过程详细解析](https://my.oschina.net/u/2415799/blog/865526)\n[CAS 4.1.10 版本服務端原始碼解讀](https://www.codetw.com/lyxepf.html)\n[从http验证流程解析CAS单点登录](https://www.jianshu.com/p/5ef9407c71af)\n[CAS的详细登录流程](https://blog.csdn.net/qq_34246546/article/details/79493208)\n[前端关于单点登录SSO的知识](https://juejin.im/post/5b8116afe51d4538d23db11e)\n<!--more-->","slug":"cas-sso","published":1,"updated":"2019-07-21T10:02:35.246Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjyhdljnx0007j9s60zo29mn2","content":"<p>这篇文章，将从登陆、登出流程，详细讲解CAS+Shiro的执行过程。</p>\n<h2 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h2><p>uum：一个基于RBAC（Role-Based Access Control ）的权限系统（CAS client + shiro）<br>sso：CAS server，负责认证授权</p>\n<blockquote>\n<h3 id=\"登陆流程\"><a href=\"#登陆流程\" class=\"headerlink\" title=\"登陆流程:\"></a>登陆流程:</h3></blockquote>\n<p>这里将以时序图的方式展现。</p>\n<a id=\"more\"></a>\n<p><img src=\"/2019/03/05/cas-sso/cas-login.svg\" alt=\"cas-login\"></p>\n<blockquote>\n<h3 id=\"登出流程\"><a href=\"#登出流程\" class=\"headerlink\" title=\"登出流程:\"></a>登出流程:</h3></blockquote>\n<p>这里将以时序图的方式展现。<br><img src=\"/2019/03/05/cas-sso/cas-logout.svg\" alt=\"cas-login\"></p>\n<p><strong>局限性：</strong></p>\n<blockquote>\n<ul>\n<li>采用shiro，各业务系统保存了用户信息，无统一保存用户信息容器，当用户改变，无法立即全局生效；并且退出时，需要发送MQ去清空各业务系统的信息，将导致MQ压力增大。</li>\n<li>若设计不合理，SSO认证过程会很长，并且用户授权信息将很大，增加SSO服务压力。</li>\n</ul>\n</blockquote>\n<p><strong>个人感悟</strong><br>针对上面现阶段系统的局限性，以下是个人优化想法：</p>\n<blockquote>\n<ul>\n<li>认证过程，只验证用户的登录名密码。CAS client根据需要，再调用服务去获取用户授权信息，并将信息统一存放至Redis。</li>\n<li>用户退出，清空Redis中的用户信息，</li>\n</ul>\n</blockquote>\n<p>参考博客：<br><a href=\"https://my.oschina.net/u/2415799/blog/865526\" target=\"_blank\" rel=\"noopener\">shiro 登录授权过程详细解析</a><br><a href=\"https://www.codetw.com/lyxepf.html\" target=\"_blank\" rel=\"noopener\">CAS 4.1.10 版本服務端原始碼解讀</a><br><a href=\"https://www.jianshu.com/p/5ef9407c71af\" target=\"_blank\" rel=\"noopener\">从http验证流程解析CAS单点登录</a><br><a href=\"https://blog.csdn.net/qq_34246546/article/details/79493208\" target=\"_blank\" rel=\"noopener\">CAS的详细登录流程</a><br><a href=\"https://juejin.im/post/5b8116afe51d4538d23db11e\" target=\"_blank\" rel=\"noopener\">前端关于单点登录SSO的知识</a></p>\n<!--more-->","site":{"data":{}},"excerpt":"<p>这篇文章，将从登陆、登出流程，详细讲解CAS+Shiro的执行过程。</p>\n<h2 id=\"开始\"><a href=\"#开始\" class=\"headerlink\" title=\"开始\"></a>开始</h2><p>uum：一个基于RBAC（Role-Based Access Control ）的权限系统（CAS client + shiro）<br>sso：CAS server，负责认证授权</p>\n<blockquote>\n<h3 id=\"登陆流程\"><a href=\"#登陆流程\" class=\"headerlink\" title=\"登陆流程:\"></a>登陆流程:</h3></blockquote>\n<p>这里将以时序图的方式展现。</p>","more":"<p><img src=\"/2019/03/05/cas-sso/cas-login.svg\" alt=\"cas-login\"></p>\n<blockquote>\n<h3 id=\"登出流程\"><a href=\"#登出流程\" class=\"headerlink\" title=\"登出流程:\"></a>登出流程:</h3></blockquote>\n<p>这里将以时序图的方式展现。<br><img src=\"/2019/03/05/cas-sso/cas-logout.svg\" alt=\"cas-login\"></p>\n<p><strong>局限性：</strong></p>\n<blockquote>\n<ul>\n<li>采用shiro，各业务系统保存了用户信息，无统一保存用户信息容器，当用户改变，无法立即全局生效；并且退出时，需要发送MQ去清空各业务系统的信息，将导致MQ压力增大。</li>\n<li>若设计不合理，SSO认证过程会很长，并且用户授权信息将很大，增加SSO服务压力。</li>\n</ul>\n</blockquote>\n<p><strong>个人感悟</strong><br>针对上面现阶段系统的局限性，以下是个人优化想法：</p>\n<blockquote>\n<ul>\n<li>认证过程，只验证用户的登录名密码。CAS client根据需要，再调用服务去获取用户授权信息，并将信息统一存放至Redis。</li>\n<li>用户退出，清空Redis中的用户信息，</li>\n</ul>\n</blockquote>\n<p>参考博客：<br><a href=\"https://my.oschina.net/u/2415799/blog/865526\" target=\"_blank\" rel=\"noopener\">shiro 登录授权过程详细解析</a><br><a href=\"https://www.codetw.com/lyxepf.html\" target=\"_blank\" rel=\"noopener\">CAS 4.1.10 版本服務端原始碼解讀</a><br><a href=\"https://www.jianshu.com/p/5ef9407c71af\" target=\"_blank\" rel=\"noopener\">从http验证流程解析CAS单点登录</a><br><a href=\"https://blog.csdn.net/qq_34246546/article/details/79493208\" target=\"_blank\" rel=\"noopener\">CAS的详细登录流程</a><br><a href=\"https://juejin.im/post/5b8116afe51d4538d23db11e\" target=\"_blank\" rel=\"noopener\">前端关于单点登录SSO的知识</a></p>\n<!--more-->"},{"title":"本博客搭建","date":"2019-03-02T03:41:10.000Z","_content":"记录一下搭建过程，备忘。\n\n### 1、安装相应软件\n\n安装Node.js\n\n### 2、具体流程\n\n基于多人协作\n``` bash\n1、 创建githubname.github.io的仓库。\n2、 创建分支：hexo\n3、 本地创建空文件夹，执行hexo init[将生成_config.yml等文件]，然后将空文件夹内的所有内容复制到本地仓库\n4、 在hexo分支执行hexo g, hexo s。然后访问http://localhost:4000，就可以看见博客\n\n注意：githubname必须是github账户的名字\n```\n\n<!--more-->\n\nMore info: [博客搭建详细过程](https://github.com/qiubaiying/qiubaiying.github.io/wiki/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B)\n\n### 3、主题\n\n主题切换\n``` bash\n1、 使用next主题，需要在themes文件夹中将next主题clone下来\n2、 需要配置_config.yml文件: \n    theme: next\n3、 next配置 themes/next/_config.yml\n    本博客主题样式: scheme: Gemini\n    头像: avatar: /images/touxiang.jpg\n    菜单：menu\n \n问题：若hexo g过程中出现 No layout，则执行hexo clean\n```\n\nMore info: [Next主题](http://theme-next.iissnan.com/getting-started.html)\nMore info: [Next具体样式](https://theme-next.iissnan.com/theme-settings.html)\n\n\n### 4、文章创建\n\n方式一\n``` bash\nhexo博客目录下，hexo new \"文章名称\"\n```\n\n方式二\n``` bash\n博客目录下的/source/_posts/，创建新文章md文件\n```\n\nMore info: [新文章](https://winney07.github.io/2018/08/02/%E5%9C%A8Hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/)\n\n### 5、文章发布\n\n需要将文章发布至nam.github.io\n``` bash\n1、 配置_config.yml\n    deploy:\n      type: git\n      repo: https://github.com/**/name.github.io.git\n      branch: master\n2、 执行 hexo d\n\n注意：发布路径必须是master\n```\n\nMore info: [发布](https://hexo.io/docs/deployment.html)\n\n### 6、使用时序图\n\n安装插件\n``` bash\n    npm install hexo-tag-plantuml --save\n```\n语法\n``` bash\n    {% plantuml %}\n        Bob->Alice : hello\n    {% endplantuml %} \n```\n\nMore info: [参考](http://www.zhaiqianfeng.com/2017/05/hexo-plantuml.html)","source":"_posts/本博客搭建.md","raw":"---\ntitle: 本博客搭建\ndate: 2019-03-02 11:41:10\ncategories: hexo\n---\n记录一下搭建过程，备忘。\n\n### 1、安装相应软件\n\n安装Node.js\n\n### 2、具体流程\n\n基于多人协作\n``` bash\n1、 创建githubname.github.io的仓库。\n2、 创建分支：hexo\n3、 本地创建空文件夹，执行hexo init[将生成_config.yml等文件]，然后将空文件夹内的所有内容复制到本地仓库\n4、 在hexo分支执行hexo g, hexo s。然后访问http://localhost:4000，就可以看见博客\n\n注意：githubname必须是github账户的名字\n```\n\n<!--more-->\n\nMore info: [博客搭建详细过程](https://github.com/qiubaiying/qiubaiying.github.io/wiki/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B)\n\n### 3、主题\n\n主题切换\n``` bash\n1、 使用next主题，需要在themes文件夹中将next主题clone下来\n2、 需要配置_config.yml文件: \n    theme: next\n3、 next配置 themes/next/_config.yml\n    本博客主题样式: scheme: Gemini\n    头像: avatar: /images/touxiang.jpg\n    菜单：menu\n \n问题：若hexo g过程中出现 No layout，则执行hexo clean\n```\n\nMore info: [Next主题](http://theme-next.iissnan.com/getting-started.html)\nMore info: [Next具体样式](https://theme-next.iissnan.com/theme-settings.html)\n\n\n### 4、文章创建\n\n方式一\n``` bash\nhexo博客目录下，hexo new \"文章名称\"\n```\n\n方式二\n``` bash\n博客目录下的/source/_posts/，创建新文章md文件\n```\n\nMore info: [新文章](https://winney07.github.io/2018/08/02/%E5%9C%A8Hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/)\n\n### 5、文章发布\n\n需要将文章发布至nam.github.io\n``` bash\n1、 配置_config.yml\n    deploy:\n      type: git\n      repo: https://github.com/**/name.github.io.git\n      branch: master\n2、 执行 hexo d\n\n注意：发布路径必须是master\n```\n\nMore info: [发布](https://hexo.io/docs/deployment.html)\n\n### 6、使用时序图\n\n安装插件\n``` bash\n    npm install hexo-tag-plantuml --save\n```\n语法\n``` bash\n    {% plantuml %}\n        Bob->Alice : hello\n    {% endplantuml %} \n```\n\nMore info: [参考](http://www.zhaiqianfeng.com/2017/05/hexo-plantuml.html)","slug":"本博客搭建","published":1,"updated":"2019-06-18T14:02:55.261Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjyhdljnz000bj9s6u1roksfc","content":"<p>记录一下搭建过程，备忘。</p>\n<h3 id=\"1、安装相应软件\"><a href=\"#1、安装相应软件\" class=\"headerlink\" title=\"1、安装相应软件\"></a>1、安装相应软件</h3><p>安装Node.js</p>\n<h3 id=\"2、具体流程\"><a href=\"#2、具体流程\" class=\"headerlink\" title=\"2、具体流程\"></a>2、具体流程</h3><p>基于多人协作</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、 创建githubname.github.io的仓库。</span><br><span class=\"line\">2、 创建分支：hexo</span><br><span class=\"line\">3、 本地创建空文件夹，执行hexo init[将生成_config.yml等文件]，然后将空文件夹内的所有内容复制到本地仓库</span><br><span class=\"line\">4、 在hexo分支执行hexo g, hexo s。然后访问http://localhost:4000，就可以看见博客</span><br><span class=\"line\"></span><br><span class=\"line\">注意：githubname必须是github账户的名字</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>More info: <a href=\"https://github.com/qiubaiying/qiubaiying.github.io/wiki/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B\" target=\"_blank\" rel=\"noopener\">博客搭建详细过程</a></p>\n<h3 id=\"3、主题\"><a href=\"#3、主题\" class=\"headerlink\" title=\"3、主题\"></a>3、主题</h3><p>主题切换</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、 使用next主题，需要在themes文件夹中将next主题<span class=\"built_in\">clone</span>下来</span><br><span class=\"line\">2、 需要配置_config.yml文件: </span><br><span class=\"line\">    theme: next</span><br><span class=\"line\">3、 next配置 themes/next/_config.yml</span><br><span class=\"line\">    本博客主题样式: scheme: Gemini</span><br><span class=\"line\">    头像: avatar: /images/touxiang.jpg</span><br><span class=\"line\">    菜单：menu</span><br><span class=\"line\"> </span><br><span class=\"line\">问题：若hexo g过程中出现 No layout，则执行hexo clean</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"noopener\">Next主题</a><br>More info: <a href=\"https://theme-next.iissnan.com/theme-settings.html\" target=\"_blank\" rel=\"noopener\">Next具体样式</a></p>\n<h3 id=\"4、文章创建\"><a href=\"#4、文章创建\" class=\"headerlink\" title=\"4、文章创建\"></a>4、文章创建</h3><p>方式一</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo博客目录下，hexo new <span class=\"string\">\"文章名称\"</span></span><br></pre></td></tr></table></figure>\n\n<p>方式二</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">博客目录下的/<span class=\"built_in\">source</span>/_posts/，创建新文章md文件</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://winney07.github.io/2018/08/02/%E5%9C%A8Hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/\" target=\"_blank\" rel=\"noopener\">新文章</a></p>\n<h3 id=\"5、文章发布\"><a href=\"#5、文章发布\" class=\"headerlink\" title=\"5、文章发布\"></a>5、文章发布</h3><p>需要将文章发布至nam.github.io</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、 配置_config.yml</span><br><span class=\"line\">    deploy:</span><br><span class=\"line\">      <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">      repo: https://github.com/**/name.github.io.git</span><br><span class=\"line\">      branch: master</span><br><span class=\"line\">2、 执行 hexo d</span><br><span class=\"line\"></span><br><span class=\"line\">注意：发布路径必须是master</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">发布</a></p>\n<h3 id=\"6、使用时序图\"><a href=\"#6、使用时序图\" class=\"headerlink\" title=\"6、使用时序图\"></a>6、使用时序图</h3><p>安装插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-tag-plantuml --save</span><br></pre></td></tr></table></figure>\n\n<p>语法</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% plantuml %&#125;</span><br><span class=\"line\">    Bob-&gt;Alice : hello</span><br><span class=\"line\">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"http://www.zhaiqianfeng.com/2017/05/hexo-plantuml.html\" target=\"_blank\" rel=\"noopener\">参考</a></p>\n","site":{"data":{}},"excerpt":"<p>记录一下搭建过程，备忘。</p>\n<h3 id=\"1、安装相应软件\"><a href=\"#1、安装相应软件\" class=\"headerlink\" title=\"1、安装相应软件\"></a>1、安装相应软件</h3><p>安装Node.js</p>\n<h3 id=\"2、具体流程\"><a href=\"#2、具体流程\" class=\"headerlink\" title=\"2、具体流程\"></a>2、具体流程</h3><p>基于多人协作</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、 创建githubname.github.io的仓库。</span><br><span class=\"line\">2、 创建分支：hexo</span><br><span class=\"line\">3、 本地创建空文件夹，执行hexo init[将生成_config.yml等文件]，然后将空文件夹内的所有内容复制到本地仓库</span><br><span class=\"line\">4、 在hexo分支执行hexo g, hexo s。然后访问http://localhost:4000，就可以看见博客</span><br><span class=\"line\"></span><br><span class=\"line\">注意：githubname必须是github账户的名字</span><br></pre></td></tr></table></figure>","more":"<p>More info: <a href=\"https://github.com/qiubaiying/qiubaiying.github.io/wiki/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B\" target=\"_blank\" rel=\"noopener\">博客搭建详细过程</a></p>\n<h3 id=\"3、主题\"><a href=\"#3、主题\" class=\"headerlink\" title=\"3、主题\"></a>3、主题</h3><p>主题切换</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、 使用next主题，需要在themes文件夹中将next主题<span class=\"built_in\">clone</span>下来</span><br><span class=\"line\">2、 需要配置_config.yml文件: </span><br><span class=\"line\">    theme: next</span><br><span class=\"line\">3、 next配置 themes/next/_config.yml</span><br><span class=\"line\">    本博客主题样式: scheme: Gemini</span><br><span class=\"line\">    头像: avatar: /images/touxiang.jpg</span><br><span class=\"line\">    菜单：menu</span><br><span class=\"line\"> </span><br><span class=\"line\">问题：若hexo g过程中出现 No layout，则执行hexo clean</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"noopener\">Next主题</a><br>More info: <a href=\"https://theme-next.iissnan.com/theme-settings.html\" target=\"_blank\" rel=\"noopener\">Next具体样式</a></p>\n<h3 id=\"4、文章创建\"><a href=\"#4、文章创建\" class=\"headerlink\" title=\"4、文章创建\"></a>4、文章创建</h3><p>方式一</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo博客目录下，hexo new <span class=\"string\">\"文章名称\"</span></span><br></pre></td></tr></table></figure>\n\n<p>方式二</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">博客目录下的/<span class=\"built_in\">source</span>/_posts/，创建新文章md文件</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://winney07.github.io/2018/08/02/%E5%9C%A8Hexo%E5%8D%9A%E5%AE%A2%E4%B8%AD%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0/\" target=\"_blank\" rel=\"noopener\">新文章</a></p>\n<h3 id=\"5、文章发布\"><a href=\"#5、文章发布\" class=\"headerlink\" title=\"5、文章发布\"></a>5、文章发布</h3><p>需要将文章发布至nam.github.io</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、 配置_config.yml</span><br><span class=\"line\">    deploy:</span><br><span class=\"line\">      <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">      repo: https://github.com/**/name.github.io.git</span><br><span class=\"line\">      branch: master</span><br><span class=\"line\">2、 执行 hexo d</span><br><span class=\"line\"></span><br><span class=\"line\">注意：发布路径必须是master</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">发布</a></p>\n<h3 id=\"6、使用时序图\"><a href=\"#6、使用时序图\" class=\"headerlink\" title=\"6、使用时序图\"></a>6、使用时序图</h3><p>安装插件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-tag-plantuml --save</span><br></pre></td></tr></table></figure>\n\n<p>语法</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% plantuml %&#125;</span><br><span class=\"line\">    Bob-&gt;Alice : hello</span><br><span class=\"line\">&#123;% endplantuml %&#125;</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"http://www.zhaiqianfeng.com/2017/05/hexo-plantuml.html\" target=\"_blank\" rel=\"noopener\">参考</a></p>"}],"PostAsset":[{"_id":"source/_posts/Linux-io-model/sync-block.png","slug":"sync-block.png","post":"cjyhdljnj0000j9s6zmvneqzs","modified":0,"renderable":0},{"_id":"source/_posts/bio/bio.png","slug":"bio.png","post":"cjyhdljnv0005j9s6ew85k75p","modified":0,"renderable":0},{"_id":"source/_posts/cas-sso/cas-login.svg","slug":"cas-login.svg","post":"cjyhdljnx0007j9s60zo29mn2","modified":0,"renderable":0},{"_id":"source/_posts/cas-sso/cas-logout.svg","slug":"cas-logout.svg","post":"cjyhdljnx0007j9s60zo29mn2","modified":0,"renderable":0},{"_id":"source/_posts/Linux-io-model/async-block.png","slug":"async-block.png","post":"cjyhdljnj0000j9s6zmvneqzs","modified":0,"renderable":0},{"_id":"source/_posts/Linux-io-model/sync-nonblock.png","slug":"sync-nonblock.png","post":"cjyhdljnj0000j9s6zmvneqzs","modified":0,"renderable":0},{"_id":"source/_posts/nio/nio-common.png","slug":"nio-common.png","post":"cjyhdljnw0006j9s6k0fgx578","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cjyhdljnj0000j9s6zmvneqzs","category_id":"cjyhdljnt0003j9s6x9js29p7","_id":"cjyhdljo1000cj9s6l818nel1"},{"post_id":"cjyhdljnr0002j9s64zlra7i5","category_id":"cjyhdljny0008j9s6t8kh0b3q","_id":"cjyhdljo1000gj9s6dbhyvrhb"},{"post_id":"cjyhdljnv0005j9s6ew85k75p","category_id":"cjyhdljo1000dj9s6fczg0ey1","_id":"cjyhdljo2000jj9s6w8d4gecb"},{"post_id":"cjyhdljnx0007j9s60zo29mn2","category_id":"cjyhdljo2000hj9s66hjvdg1d","_id":"cjyhdljo3000lj9s6wdfc68j8"},{"post_id":"cjyhdljnz000bj9s6u1roksfc","category_id":"cjyhdljo2000kj9s6pji7l5dm","_id":"cjyhdljo3000mj9s684m4cen8"},{"post_id":"cjyhdljnw0006j9s6k0fgx578","category_id":"cjyhdljo1000dj9s6fczg0ey1","_id":"cjyhdyv6i0003jus6v9oyz91x"}],"PostTag":[{"post_id":"cjyhdljnj0000j9s6zmvneqzs","tag_id":"cjyhdljnu0004j9s6j6glou31","_id":"cjyhdljnz000aj9s6aj7psgc5"},{"post_id":"cjyhdljnv0005j9s6ew85k75p","tag_id":"cjyhdljny0009j9s6o4d9dq2y","_id":"cjyhdljo1000fj9s6pbreewno"},{"post_id":"cjyhdljnx0007j9s60zo29mn2","tag_id":"cjyhdljo1000ej9s66uxfp63w","_id":"cjyhdljo2000ij9s6jhpcqa4n"},{"post_id":"cjyhdljnw0006j9s6k0fgx578","tag_id":"cjyhdyv6i0002jus6z0eqepcs","_id":"cjyhdyv6j0004jus6f07j6e8n"}],"Tag":[{"name":"Linux IO","_id":"cjyhdljnu0004j9s6j6glou31"},{"name":"bio","_id":"cjyhdljny0009j9s6o4d9dq2y"},{"name":"CAS Shiro 单点登录 权限控制","_id":"cjyhdljo1000ej9s66uxfp63w"},{"name":"io","_id":"cjyhdx2s30000jus6j6x9c75p"},{"name":"nio","_id":"cjyhdyv6i0002jus6z0eqepcs"}]}}